#  This file is part of Delaunay triangulation robust implementation.
#
#  Copyright (C) 2010, 2011  Vladimir Rutsky <altsysrq@gmail.com>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os.path
import itertools

import SCons.Util

Import('global_env')
env = global_env.Clone()

#env['Gch'] = env.Gch('precompiled.hpp')[0]

configuration = ARGUMENTS.get('conf', None)
if configuration not in ['release', 'valgrind', 'gprof']:
  configuration = 'debug'

# Common build flags.
env.MergeFlags(env.ParseFlags("-W -Wall -frounding-math"))

cgal_cpp_defines = ['HAVE_CGAL', 'USE_CGAL_ON_INEXACT']
cgal_libs = ['CGAL', 'CGAL_Core']

libs = []
cpp_defines = []
cpp_flags = []
link_flags = []
cpp_path = ['#include', '#boost']

# Build flags.
use_cgal = False
if configuration == 'release':
    print "Using Release configuration."
    env.MergeFlags(env.ParseFlags("-O3 -g"))
    use_cgal = True
elif configuration == 'valgrind':
    print "Using Valgrind configuration."
    env.MergeFlags(env.ParseFlags("-O -g -fno-inline"))
    use_cgal = True
elif configuration == 'gprof':
    print "Using gprof configuration."
    env.MergeFlags(env.ParseFlags("-O2 -pg"))
    #libs.append('c_p')
    libs.append('c')
    link_flags += ['-pg']
    use_cgal = False # debug
else:
    # Debug configuration.
    print "Using Debug configuration."
    env.MergeFlags(env.ParseFlags("-O0"))
    use_cgal = True

if use_cgal:
    cpp_defines += cgal_cpp_defines
    libs += cgal_libs

global_env.my_main_program = \
    env.Program(target="delaunay", source=['main.cpp'],
        CPPFLAGS=cpp_flags,
        CPPDEFINES=cpp_defines,
        CPPPATH=cpp_path,
        LIBS=libs,
        LINKFLAGS=link_flags,
        )

# vim: set filetype=python ts=4 sw=4 et:
