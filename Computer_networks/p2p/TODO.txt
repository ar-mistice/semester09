 * Maybe rename modules according classes they implement? Like 
"simple_frame_transmitter.py" instead of "frame.py" and "frame_transmitter.py"
instead of "sliding_window.py".
 * There is serious performance issue - all waiting of events implemented as 
infinite cycles. Some event system should be used.
 * When something fails big chances that process will hang with running in 
background threads infinite loops.
 * In protocols above frame transfer we relying on correct fragments 
delivering between connected routers which is not really good (and realistic).
(Actually it is realistic: currently link level tends to include reliable 
transfer.)
 * Implement blocking reads with timeout.
 * Use `bytearray' instead of `str' for array of bytes in transmission.
 * Add global time control (pause/start).

GUI:
 * Close colors. Should get colors sequently from hue range.
 * Manual adding of persistent links.
 * Add window with statistics about loss packets etc.
